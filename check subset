#include<iostream>
#include<vector>
using namespace std;

bool issubset(vector<int> arr1, int m, vector<int> arr2, int n){
    for(int i =0; i<n; i++){
        bool found = false;


        for(int j =0; j<m; j++){
            if(arr1[j] == arr2[i]){
                 found = true;
            break;

            }
           
        }

        if(!found)
        return false;
    }
    return true;
}
int main(){
    vector<int> arr1 = {11,1,13,22,3,7};
    vector<int> arr2 = {11,2,7,1};
    int m = arr1.size();
    int n = arr2.size();
    bool s = issubset(arr1,m,arr2,n);

    if(s){
        cout<<"yes it is a subset"<<endl;
    }
   else{
           cout<<"NO"<<endl;
   }
   

}












#include<iostream>
#include<vector>
#include<unordered_set>
using namespace std;

bool checksubset(vector<int> &arr1, vector<int> &arr2){
    unordered_set<int> hashset(arr1.begin(), arr1.end());

    for(int num : arr2){
        if(hashset.find(num) == hashset.end()){
            return false;
        }
    }
    return true;
}
int main(){
    vector<int>arr1 = {1,2,3,4,5,6};
    vector<int>arr2 = {1,2,3};

    bool q = checksubset(arr1, arr2);

    if(q)
    cout<<"yes"<<endl;
    else
    cout<<"no"<<endl;

}
